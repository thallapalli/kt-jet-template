/**
 * @license
 * Copyright (c) 2014, 2020, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore","jquery","ojs/ojdataprovider","ojs/ojcomponentcore","ojs/ojeventtarget"],function(t,e,s){"use strict";class a{constructor(t){this.dataProvider=t,this.CacheAsyncIterable=class{constructor(t,e,s){this._parent=t,this.dataProviderAsyncIterator=e,this.cache=s,this[Symbol.asyncIterator]=(()=>new this._parent.CacheAsyncIterator(this._parent,this.dataProviderAsyncIterator,this.cache))}},this.CacheAsyncIterator=class{constructor(t,e,s){this._parent=t,this.asyncIterator=e,this.cache=s,this._cachedOffset=0,this._iteratedOffset=0}next(){let t,e=this,s=this._parent._lastFetchParams,a=s.size?s.size:-1;if(-1==a){if(this.cache.isDone())return t=this.cache.getDataList(s,this._cachedOffset),this._cachedOffset=this._cachedOffset+t.data.length,Promise.resolve(new this._parent.CacheAsyncIteratorReturnResult(t))}else{if(this.cache.getSize()>=this._cachedOffset+a||this.cache.isDone())return t=this.cache.getDataList(s,this._cachedOffset),this._cachedOffset=this._cachedOffset+t.data.length,this._cachedOffset<this.cache.getSize()||!this.cache.isDone()?Promise.resolve(new this._parent.CacheAsyncIteratorYieldResult(t)):Promise.resolve(new this._parent.CacheAsyncIteratorReturnResult(t));if(this._cachedOffset>0)return new Promise(function(t,s){if(e._iteratedOffset<e._cachedOffset){let s=function(){return e.asyncIterator.next().then(a=>{if(e._iteratedOffset=e._iteratedOffset+a.value.data.length,!(e._iteratedOffset>=e._cachedOffset||a.done))return s();t()})};return s()}t()}).then(()=>this.asyncIterator.next().then(t=>(e._iteratedOffset=e._iteratedOffset+t.value.data.length,e._cachedOffset=e._iteratedOffset,e.cache.addListResult(t),t.done?new e._parent.CacheAsyncIteratorReturnResult(t.value):new e._parent.CacheAsyncIteratorYieldResult(t.value))))}return this.asyncIterator.next().then(t=>(e._iteratedOffset=e._iteratedOffset+t.value.data.length,e._cachedOffset=e._iteratedOffset,e.cache.addListResult(t),t.done?new e._parent.CacheAsyncIteratorReturnResult(t.value):new e._parent.CacheAsyncIteratorYieldResult(t.value)))}},this.CacheAsyncIteratorYieldResult=class{constructor(t){this.value=t,this[a._VALUE]=t,this[a._DONE]=!1}},this.CacheAsyncIteratorReturnResult=class{constructor(t){this.value=t,this[a._VALUE]=t,this[a._DONE]=!0}};let e=this;this.cache=new s.DataCache,this._lastFetchParams=null,t.createOptimizedKeyMap&&(this.createOptimizedKeyMap=(e=>t.createOptimizedKeyMap(e))),t.createOptimizedKeySet&&(this.createOptimizedKeySet=(e=>t.createOptimizedKeySet(e))),t.addEventListener(a._MUTATE,t=>{e.cache.processMutations(t.detail),e.dispatchEvent(t)}),t.addEventListener(a._REFRESH,t=>{e.cache.reset(),e.dispatchEvent(t)})}containsKeys(t){let e=new Set,s=new Set,a=this.cache.getDataByKeys(t);if(t.keys.forEach(t=>{a.results.get(t)?e.add(t):s.add(t)}),0==s.size)return Promise.resolve({containsParameters:t,results:e});{let a={attributes:t.attributes,keys:s,scope:t.scope};return this.dataProvider.containsKeys(a).then(s=>(s.results.forEach(t=>{e.add(t)}),{containsParameters:t,results:e}))}}fetchByKeys(t){let e=new Map,s=new Set,a=this.cache.getDataByKeys(t);if(t.keys.forEach(t=>{let r=a.results.get(t);r?e.set(t,r):s.add(t)}),0==s.size)return Promise.resolve({fetchParameters:t,results:e});{let a={attributes:t.attributes,keys:s,scope:t.scope};return this.dataProvider.fetchByKeys(a).then(s=>(s.results.forEach((t,s)=>{e.set(s,t)}),{fetchParameters:t,results:e}))}}fetchByOffset(t){let e=t.size?t.size:a._DEFAULT_SIZE;if(this._compareLastFetchParameters(t)&&t.offset+e<this.cache.getSize()){let s=JSON.parse(JSON.stringify(t));s.size=e;let a=this.cache.getDataByOffset(s);if(a)return Promise.resolve(a)}return this.dataProvider.fetchByOffset(t)}fetchFirst(t){this._compareLastFetchParameters(t)||this.cache.reset(),this._storeLastFetchParams(t);const e=this.dataProvider.fetchFirst(t);return new this.CacheAsyncIterable(this,e[Symbol.asyncIterator](),this.cache)}getCapability(t){let e=this.dataProvider.getCapability(t);return"fetchCapability"===t?{attributeFilter:e.attributeFilter,caching:"visitedByCurrentIterator"}:e}getTotalSize(){return!this._lastFetchParams.filterCriterion&&this.cache.isDone()?Promise.resolve(this.cache.getSize()):this.dataProvider.getTotalSize()}isEmpty(){return!this._lastFetchParams.filterCriterion&&this.cache.isDone()?0===this.cache.getSize()?"yes":"no":this.dataProvider.isEmpty()}_compareLastFetchParameters(e){return e=e||{},null!=this._lastFetchParams&&t.Object.compareValues(this._lastFetchParams.attributes,e.attributes||null)&&t.Object.compareValues(this._lastFetchParams.filterDef,this._getFilterDef(e.filterCriterion))&&t.Object.compareValues(this._lastFetchParams.sortCriteria,e.sortCriteria||null)}_storeLastFetchParams(t){t=t||{},this._lastFetchParams={},this._lastFetchParams.size=t.size,this._lastFetchParams.attributes=t.attributes?JSON.parse(JSON.stringify(t.attributes)):null,this._lastFetchParams.filterDef=this._getFilterDef(t.filterCriterion),this._lastFetchParams.sortCriteria=t.sortCriteria?JSON.parse(JSON.stringify(t.sortCriteria)):null}_getFilterDef(t){if(!t)return null;let e={};return Object.keys(t).forEach(function(s){"filter"!=s&&(e[s]=t[s])}),e}}
/**
 * @preserve Copyright 2013 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
return a._KEY="key",a._KEYS="keys",a._DATA="data",a._STARTINDEX="startIndex",a._SORT="sort",a._SORTCRITERIA="sortCriteria",a._FILTERCRITERION="filterCriterion",a._METADATA="metadata",a._ITEMS="items",a._FROM="from",a._OFFSET="offset",a._REFRESH="refresh",a._MUTATE="mutate",a._SIZE="size",a._FETCHPARAMETERS="fetchParameters",a._VALUE="value",a._DONE="done",a._RESULTS="results",a._CONTAINSPARAMETERS="containsParameters",a._DEFAULT_SIZE=25,a._CONTAINSKEYS="containsKeys",a._FETCHBYKEYS="fetchByKeys",a._FETCHBYOFFSET="fetchByOffset",a._FETCHFIRST="fetchFirst",a._ADDEVENTLISTENER="addEventListener",a._FETCHATTRIBUTES="attributes",t.CachedIteratorResultsDataProvider=a,t.CachedIteratorResultsDataProvider=a,t.EventTargetMixin.applyMixin(a),a});