// Copyright (c) 2014, 2020, Oracle and/or its affiliates.  Licensed under The Universal Permissive License (UPL), Version 1.0 as shown at https://oss.oracle.com/licenses/upl/

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the
//          version in your base theme's directory,
//          for example alta/widgets/_oj.alta.treeview.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

@import "../../../utilities/_oj.utilities.scss";

  @include module-include-once("common.treeview") {

    // Prevents the flash of unstyled content before the HTML becomes JET components.
    @if $initialVisibility == hidden {
      oj-tree-view:not(.oj-complete) {
        visibility: hidden;
      }
    }

    // Prevents the grey background that appears on tap on iOS
    oj-tree-view {
      display: block;
      overflow: auto;
      -webkit-tap-highlight-color: transparent;
    }

    // Remove focus ring
    .oj-treeview-list:focus {
      outline: none;
    }

    // Base style for treeview and items
    .oj-treeview-list,
    .oj-treeview-item {
      display: block;
      margin: 0 ;
      padding: 0;
      list-style-type: none;
      user-select: none;
    }
    
    // [role='tree'] is used to apply 1px padding only for parent ul in treeview
    // to show focus outline around the tree row
    .oj-treeview-list[role='tree'] {
      padding: 1px;
    }

    // Basic item
    .oj-treeview-item {
      white-space: nowrap;
      vertical-align: middle;
    }

    .oj-treeview-list.oj-treeview-drag-image > .oj-treeview-item {
      @include oj-ltr() {
        margin-left: 0;
      }
      @include oj-rtl() {
        margin-right: 0;
      }
    }

    // Treeview icon (item, disclosure)
    .oj-treeview-icon {
      display: inline-block;
      text-decoration: none;
      vertical-align: middle;
      @include oj-ltr() {
        text-align: right;
      }
      @include oj-rtl() {
        text-align: left;
      }
    }

    // Item text
    .oj-treeview-item-text {
      color: var(--oj-tree-view-text-color);
      cursor: default;
      vertical-align: middle;
    }

    .oj-treeview-item-content-icon {
      font-size: var(--oj-icon-size);
      vertical-align: middle;
    }
    
    .oj-treeview-item-content {
      display: inline-block;
      vertical-align: middle;
      width: 100%;
      border-radius: var(--oj-core-border-radius-lg);
      box-sizing: border-box;
      @include oj-ltr() {
        padding-left: 0.25rem;
      }
      @include oj-rtl() {
        padding-right: 0.25rem;
      }
    }

    .oj-treeview-selector {
      display: inline-block;
      vertical-align: middle;
    }

    .oj-treeview-selector .oj-selector,
    .oj-treeview-selector .oj-selector .oj-selector-wrapper .oj-selectorbox {
      height: var(--oj-tree-view-row-height);
      width: var(--oj-tree-view-spacer-width);
    }

    // Hovered item content
    .oj-treeview-item-content.oj-hover {
      background-color: var(--oj-tree-view-item-bg-color-hover);
    }

    // Selected item content when the root is focused
    .oj-treeview-list:focus .oj-treeview-item-content.oj-selected {
      background-color: var(--oj-tree-view-item-bg-color-selected);
    }

    // Selected item content when the root is NOT focused
    .oj-treeview-item-content.oj-selected {

        background-color: var(--oj-tree-view-item-bg-color-selected-inactive);

    }

    // Styling for the list item elements in selected state when treeview is in high contrast mode.
    .oj-hicontrast .oj-treeview-item-content.oj-selected {
      border-width: 1px 2px 2px 1px;
      border-style: solid;
      border-color: initial;
    }

    // Styling for the list item elements in focus state when treeview is in high contrast mode.
    .oj-hicontrast .oj-treeview-item-content.oj-focus-highlight{
      outline-width: 2px;
      outline-style: dotted;
      border-width: 0 1px 1px 0;
      border-style: dotted;
    }

    // Focused item content
    .oj-treeview-item-content.oj-focus-highlight {
      outline: -webkit-focus-ring-color auto;
      outline: 1px dashed var(--oj-core-focus-border-color);
    }

    // Disclosure icon or the spacer
    .oj-treeview-spacer {
        height: var(--oj-tree-view-row-height);
    }

    // DnD reorder insert position pointer line when dropping between items
    .oj-treeview-drop-line {
      height: 2px;
      width: 100px;
      position: absolute;
      background-color: var(--oj-core-drop-target-line-color);
      pointer-events: none;
    }

    .oj-treeview-drop-zone {
      background-color: var(--oj-core-drop-target-color-1);
      border-radius: .25rem;
    }

    // Make sure drag image isn't visible to the end user
    .oj-treeview-drag-image {
      position: fixed;
      top: 10000px;
      overflow: visible;
    }

    .oj-treeview-drag-image .oj-treeview-item {
      position: absolute;
    }
    
    // skeleton
    .oj-treeview-skeleton-content {
      height: var(--oj-tree-view-row-height);
      align-items: center;
      display: flex;
    }

    .oj-treeview-skeleton-carrot {
      width: var(--oj-typography-body-md-font-size);
      height: var(--oj-typography-body-md-font-size);
      border-radius: 4px;
      margin-right: 0.75rem;
      margin-left: 0.5rem;
    }

    .oj-treeview-skeleton-item {
      height: var(--oj-typography-body-md-font-size);
      flex-grow: 1;
    }
    
    .oj-treeview-skeleton-leaf {
      height: var(--oj-typography-body-md-font-size);
      flex-grow: 1;
      @include oj-ltr() {
        margin-left: 5rem;
      }
      @include oj-rtl() {
        margin-right: 5rem;
      }
    }

    .oj-treeview-skeleton-child {
      margin-left: 2rem;
    }
    
    .oj-collapsed > .oj-treeview-item-content > .oj-treeview-item-icon,
    .oj-expanded > .oj-treeview-item-content > .oj-treeview-item-icon,
    .oj-treeview-leaf > .oj-treeview-item-content > .oj-treeview-item-icon {
      @extend .oj-component-icon;
      background: none;
      width: auto;
      height: auto;
    }
    
    .oj-treeview-disclosure-icon {
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      justify-content: flex-end;
      @include oj-ltr() {
        margin: 0 0.5rem 0 0;
      }
      @include oj-rtl() {
        margin: 0 0 0 0.5rem;
      }
    }
    
    .oj-treeview-selector,
    .oj-treeview-icon {
      cursor: default;
      @include oj-ltr() {
        margin: 0 0.5rem 0 0;
      }
      @include oj-rtl() {
        margin: 0 0 0 0.5rem;
      }
    }

    // Default expanded parent image
    .oj-expanded > .oj-treeview-item-content > .oj-treeview-item-icon {
      @extend .oj-fwk-icon-tree-folder-open;
    }

    // Default collapsed parent image
    .oj-collapsed > .oj-treeview-item-content > .oj-treeview-item-icon {
      @extend .oj-fwk-icon-tree-folder-collapsed;
    }

    // Default leaf item image
    .oj-treeview-leaf > .oj-treeview-item-content > .oj-treeview-item-icon {
      @extend .oj-fwk-icon-tree-document;
    }
    
      /* Set the indentation here depth 1 is one indent level */
  
    *.oj-treeview-depth-1 {
        width: var(--oj-tree-view-spacer-width); }
    *.oj-treeview-depth-2 {
        width: calc(2 * var(--oj-tree-view-spacer-width)); }                
    *.oj-treeview-depth-3 {
        width: calc(3 * var(--oj-tree-view-spacer-width)); }                    
    *.oj-treeview-depth-4 {
        width: calc(4 * var(--oj-tree-view-spacer-width)); }
    *.oj-treeview-depth-5 {
        width: calc(5 * var(--oj-tree-view-spacer-width)); }                                                    
    *.oj-treeview-depth-6 {
        width: calc(6 * var(--oj-tree-view-spacer-width)); }                                
    *.oj-treeview-depth-7 {
       width: calc(7 * var(--oj-tree-view-spacer-width)); }
    *.oj-treeview-depth-8 {
        width: calc(8 * var(--oj-tree-view-spacer-width)); }
    *.oj-treeview-depth-9 {
        width: calc(9 * var(--oj-tree-view-spacer-width)); }                
    *.oj-treeview-depth-10 {
        width: calc(10 * var(--oj-tree-view-spacer-width)); }                    
    *.oj-treeview-depth-11 {
        width: calc(11 * var(--oj-tree-view-spacer-width)); }
    *.oj-treeview-depth-12 {
        width: calc(12 * var(--oj-tree-view-spacer-width)); }                                                    
    *.oj-treeview-depth-13 {
        width: calc(13 * var(--oj-tree-view-spacer-width)); }                                
    *.oj-treeview-depth-14 {
      width: calc(14 * var(--oj-tree-view-spacer-width)); }
    *.oj-treeview-depth-15 {
      width: calc(15 * var(--oj-tree-view-spacer-width)); }
    
    // Animation defaults
    $treeViewAnimationDefaults: ();

    @if ($treeViewExpandAnimation) {
      $treeViewAnimationDefaults: map-merge($treeViewAnimationDefaults, (expand: $treeViewExpandAnimation));
    }

    @if ($treeViewCollapseAnimation) {
      $treeViewAnimationDefaults: map-merge($treeViewAnimationDefaults, (collapse: $treeViewCollapseAnimation));
    }

    // Option defaults
    $treeViewDefaultOptions: ();

    @if ($treeViewAnimationDefaults) {
      $treeViewDefaultOptions: map-merge($treeViewDefaultOptions, (animation: $treeViewAnimationDefaults));
    }

    @if ($loadingIndicatorDelayDuration) {
      $treeViewDefaultOptions: map-merge($treeViewDefaultOptions, (showIndicatorDelay: $loadingIndicatorDelayDuration));
    }

    @if ($treeViewLoadIndicator) {
      $treeViewDefaultOptions: map-merge($treeViewDefaultOptions, (loadIndicator: $treeViewLoadIndicator));
    }

    @if ($treeViewDataFadeInDuration) {
      $treeViewDefaultOptions: map-merge($treeViewDefaultOptions, (dataFadeInDuration: $treeViewDataFadeInDuration));
    }

    @if ($treeViewMultipleSelectionAffordance) {
      $treeViewDefaultOptions: map-merge($treeViewDefaultOptions, (multipleSelectionAffordance: $treeViewMultipleSelectionAffordance));
    }

    // Component default options selector
    .oj-treeview-option-defaults {
      font-family: oj-json-from-map($treeViewDefaultOptions) !important;
    }
  }
