// Copyright (c) 2014, 2020, Oracle and/or its affiliates.  Licensed under The Universal Permissive License (UPL), Version 1.0 as shown at https://oss.oracle.com/licenses/upl/

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the 
//          version in your base theme's directory, 
//          for example alta/widgets/_oj.alta.formcontrol.inputtextarea.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 
@import "../../../utilities/_oj.utilities.scss";
 
  @include module-include-once("common.textarea") { 
 
    // most of the textarea selectors are in the input text files, 
    // this file includes classes that are text area specific
 
 
 
    // This is to prevent the flash of unstyled content before the html becomes JET components.
    @if $initialVisibility == hidden {
      oj-text-area:not(.oj-complete) {
        visibility: hidden;
      }      
    }
 
 
    // specific css for textarea-input
    .oj-textarea-input
    {
      font-family: inherit; 
      font-size: 100%; 
      // Remove the margin in Firefox and Safari.
      margin: 0; 
      // Remove the default vertical scrollbar in IE 10+.
      overflow: auto;
      padding: .5rem var(--oj-text-field-padding-horizontal);
      line-height: var(--oj-text-area-line-height);        
      height: auto;
      resize: none; //turning off as resizing can cause layout problems.
    }
 
    .oj-textarea.oj-read-only .oj-textarea-input
    {
      padding-top: 0px;
      padding-left: 0;
      padding-right: 0;
    }
    
    // in mixed mode, put horizontal padding back
    oj-form-layout .oj-form.oj-enabled .oj-textarea.oj-read-only .oj-textarea-input
    {
      padding: .5rem var(--oj-text-field-padding-horizontal);
    }

    // show an outline on focus for accessibility.
    // usually we would suppress this focus ring on mouse click using
    // :not(.oj-focus-highlight), but it would be unlikely a user clicks
    // on a readonly field with his mouse so for coding simplicity sake,
    // we are not suppressing the focus ring on mouse click.
    .oj-text-field.oj-read-only .oj-textarea-input:focus {
      @include oj-focus-outline(var(--oj-core-focus-border-color));
    }

    .oj-text-field-counter.oj-textarea-counter-container {
      height: 32px;
      width: 100%;
      padding: 0 8px;
    }

    .oj-textarea .oj-text-field-counter {
      display: flex;
      align-items: center;
      justify-content: flex-end;
    }
    
    .oj-textarea .oj-text-field-counter .oj-textarea-counter-el {
      visibility: hidden;
    }

    .oj-textarea.oj-focus .oj-text-field-counter .oj-textarea-counter-el {
      visibility: visible;
    }

    .oj-textarea .oj-text-field-container{
      flex-wrap: wrap;
    }

    .oj-textarea .oj-text-field-container {
      height: auto;
    }

    // The min height helps when max rows is set and the textarea doesn't have any value. without this css, the inside label is not aligned correctly.
    .oj-textarea .oj-text-field-middle {
      min-height: var(--oj-text-field-inside-height);
    } 

    //For quiet forms.
    .oj-text-field-label-inside .oj-textarea-input {
      padding: 0 var(--oj-text-field-padding-horizontal);
      margin-top: var(--oj-text-field-inside-textarea-margin-top);
      margin-bottom: 0.25rem;
      // Since, textarea is an inline-block element, it was leaving a gap between itself and it's parent. fixed it by changing it to block
      display: block; 
    }
    
    .oj-text-field-label-inside.oj-textarea.oj-read-only .oj-textarea-input {
      margin-top: 0;
    }

    // inside an enabled form, readonly form components have padding
    oj-form-layout .oj-form.oj-enabled .oj-text-field-label-inside.oj-read-only .oj-textarea-input {
      padding: 0 var(--oj-text-field-padding-horizontal);
      margin-top: var(--oj-text-field-inside-textarea-margin-top);
    }

    // for regular readonly, it has no padding-horizontal
    .oj-text-field-label-inside.oj-read-only .oj-textarea-input {
      padding-left: 0;
      padding-right: 0;
    }

    // Min-height is set on container element and we don't want min-height on the field input because we are using rows
    // If the other selector is removed, this selector can be removed. 
    .oj-text-field-label-inside .oj-textarea-input.oj-text-field-input {
      min-height: 0;
    }

    .oj-text-field.oj-textarea.oj-disabled .oj-text-field-container {
      background-color: var(--oj-text-field-bg-color-disabled);
    }
}