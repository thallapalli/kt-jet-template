// Copyright (c) 2014, 2020, Oracle and/or its affiliates.  Licensed under The Universal Permissive License (UPL), Version 1.0 as shown at https://oss.oracle.com/licenses/upl/

@import "../../../utilities/_oj.utilities.scss";

@include module-include-once("common.helper") {

  /* helpers
  ----------------------------------*/
  // todo: we won't support the old syntax
  [data-bind*="ojComponent"]:not(.oj-component-initnode) {
    visibility: hidden; }
  
 
  // write out the theme map
  $themeRootMap: ();

  @if ($themeName != null) {
      $themeRootMap: map-merge($themeRootMap, (name: $themeName));
  }
  @if ($themeTargetPlatform != null) {
      $themeRootMap: map-merge($themeRootMap, (targetPlatform: $themeTargetPlatform));
  }
  $themeRootMap: map-merge($themeRootMap, (jetReleaseVersion: "@jetcssversion@"));

  .oj-theme-json {
      font-family: oj-json-from-map($themeRootMap) !important;
  }

  .oj-helper-hidden-accessible {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
  }

  .oj-helper-clearfix:before, .oj-helper-clearfix:after { 
    content: " "; 
    display: table; 
  }
  .oj-helper-clearfix:after { 
    clear: both; 
  }
  

  /* Used by the framework's support for detecting resize */
  .oj-helper-detect-expansion,
  .oj-helper-detect-contraction {
      position: absolute;
      overflow: hidden;
      visibility: hidden;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      direction: ltr
  }

  // NOTE: this uses !important, it is meant to be used to override a default value
  .oj-helper-hidden {
    display: none !important;
  }

  // todo: add a demo for these text-align classes

  /* aligns text left by default, aligns right when dir="rtl" is set on html element
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-text-align-start {

      text-align: left !important;
      html[dir="rtl"] & {
        text-align: right !important; 
      }


  }


  /* aligns text right by default, aligns left when dir="rtl" is set on html element
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-text-align-end {
  
      text-align: right !important;
      html[dir="rtl"] & {
        text-align: left !important; 
      }


  }



  /* Sets the start margin, equivalent to setting
     margin-left: auto in ltr languages and margin-right: auto in rtl languages */
  .oj-helper-margin-start-auto {

    @include oj-ltr() {
      margin-left: auto !important;
    }

    @include oj-rtl() {
      margin-right: auto !important;
    }

  }

  /* Sets the left and right margins to auto */
     .oj-helper-margin-auto {
        margin-left: auto !important;
        margin-right: auto !important;
    }
  

  /* Sets the end margin, equivalent to setting
     margin-right: auto in ltr languages and margin-left: auto in rtl languages */
  .oj-helper-margin-end-auto {

    @include oj-ltr() {
      margin-right: auto !important;
    }

    @include oj-rtl() {
      margin-left: auto !important;
    }

  }

  /* aligns text right
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-text-align-right {
    text-align: right !important;
  }

  /* aligns text left
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-text-align-left {
    text-align: left !important;
  }

  /* Used by the ojModule binding on a DIV that will hold cached Views */
  .oj-helper-module-cache {
      position: absolute;
      display: none;
  }

  // focus

  $focusConfig: ();

  @if ($focusHighlightPolicy) {
      $focusConfig: map-merge($focusConfig, (focusHighlightPolicy: $focusHighlightPolicy));
  }

  .oj-focus-config {
    font-family: oj-json-from-map($focusConfig) !important;
  }

  // marker style for ojDialog accesskey bug #22685535
  .oj-helper-element-with-accesskey {

  }

  // marker style for ojDialog accesskey bug #22685535
  .oj-helper-element-in-dialog-with-accesskey {

  }

  /* justifies flex content start
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-justify-content-flex-start {
    justify-content: flex-start !important;
  }

  /* justifies flex content end
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-justify-content-flex-end {
    justify-content: flex-end !important;
  }

  /* justifies flex content center
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-justify-content-center {
    justify-content: center !important;
  }

  /* justifies flex content space between
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-justify-content-space-between {
    justify-content: space-between !important;
  }

  /* justifies flex content space around
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-justify-content-space-around {
    justify-content: space-around !important;
  }

  /* justifies flex content right
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-justify-content-right {
    @include oj-ltr() {
      justify-content: flex-end !important;
    }

    @include oj-rtl() {
      justify-content: flex-start !important;
    }
  }

  /* justifies flex content left
     NOTE: this uses !important, it can therefore be used to override a previously set value */
  .oj-helper-justify-content-left {
    @include oj-ltr() {
      justify-content: flex-start !important;
    }

    @include oj-rtl() {
      justify-content: flex-end !important;
    }
  }
}
